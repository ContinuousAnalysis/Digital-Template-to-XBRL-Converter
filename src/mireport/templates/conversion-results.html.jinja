{% extends "base.html.jinja" %}
{% from "_macros.html.jinja" import download_button %}

{% block title %}VSME Digital Template-to-XBRL Converter{% endblock %}

{% block content %}


<div class="flex justify-between items-center">
  <a href="{{url_for('basic.index')}}" class="inline-block px-6 py-2 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition">
    ← Back to Home
  </a>
  <a href="{{url_for('basic.conversions', **request.args)}}" class="inline-block px-6 py-2 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition">
    My Conversions →
  </a>
</div>

<div class="mt-8 space-y-8">
    {% if expired is true %}
    <div class="p-4 rounded-lg shadow-md bg-red-100 border border-red-400 text-red-800">
        <p class="text-center font-semibold">Conversion expired</p>
    </div>
    <div class="p-4 rounded-lg shadow-md bg-yellow-100 border border-yellow-400 text-yellow-800">
        <p class="text-center font-semibold">No conversion results available.</p>
    </div>
    {% else %}
        {% include "_svg.html.jinja" %}
        {% set conv_rag = conversion_result.getRAG(withoutXBRLValidation=true) %}
    <!-- Title -->
    <h2 class="text-3xl font-bold text-center text-gray-800">Conversion Results</h2>
    <!-- Conversion Status -->
    <div class="p-4 rounded-lg shadow-md 
        {% if conv_rag.green %}bg-green-100 border border-green-400 text-green-800
        {% elif conv_rag.red %}bg-red-100 border border-red-400 text-red-800
        {% elif conv_rag.amber %}bg-amber-100 border border-amber-400 text-amber-800
        {% endif %}">
        <p class="text-center font-semibold">
        {% if conv_rag.red %}
            Technical conversion failed with ERRORS, please review the messages and the Digital Template
        {% elif conv_rag.amber %}
            Technical conversion successful with WARNINGs, please review the messages and the Digital Template
        {% elif conv_rag.green %}
            Technical conversion of the Digital Template to XBRL was successful!
        {% endif %}
        </p>
    </div>

    <!-- XBRL Validation Status -->
    {% set val_rag = conversion_result.getRAG(justXBRLValidation=true) %}
    <div class="p-4 rounded-lg shadow-md 
        {% if not conversion_result.conversionSuccessful or val_rag.red %}bg-red-100 border border-red-400 text-red-800
        {% elif val_rag.amber %}bg-amber-100 border border-amber-400 text-amber-800
        {% elif val_rag.green %}bg-green-100 border border-green-400 text-green-800
        {% endif %}">
        <p class="text-center font-semibold">
        {% if not conversion_result.conversionSuccessful %}
            XBRL Report not validated due to earlier conversion failure
        {% elif val_rag.red %}
            The generated XBRL report has validation ERRORS, please review the messages and the Digital Template
        {% elif val_rag.amber %}
            The generated XBRL report has validation WARNINGs, please review the messages and the Digital Template
        {% elif val_rag.green %}
            The generated XBRL report is valid according to the technical XBRL specifications!
        {% endif %}
        </p>
    </div>

    <!-- Download Links -->
    <div class="space-y-4">
        <h3 class="text-xl font-semibold text-gray-800">
            {% if conversion_result.conversionSuccessful %}
            Files to download
            {% else %}
            No files available for download
            {% endif %}
        </h3>
        {% if conversion_result.conversionSuccessful %}
        <p>
            Please review the generated XBRL report and the messages below to ensure that all disclosures are complete and accurate. The report can be downloaded in various formats:
        </p>
        {% endif %}
        <div class="flex gap-4 justify-between items-center download-buttons">
            {{ download_button(
                'viewer',
                url_for('basic.downloadFile', id=conversion_result.conversionId, ftype='viewer'),
                conversion_result.conversionSuccessful
            ) }}

            {{ download_button(
                'zip',
                url_for('basic.downloadFile', id=conversion_result.conversionId, ftype='zip'),
                conversion_result.conversionSuccessful
            ) }}

            {{ download_button(
                'json',
                url_for('basic.downloadFile', id=conversion_result.conversionId, ftype='json'),
                conversion_result.conversionSuccessful
            ) }}
        </div>
    </div>
    <style>
    @media (max-width: 800px) {
        .download-buttons {
            flex-direction: column !important;
        }
    }
    </style>
    <div class="flex justify-between items-center gap-4">
        <div><span class="font-bold text-gray-600">Timestamp:</span> {{conversion_date}} </div>
        <div><span class="font-bold text-gray-600">Original filename:</span> {{upload_filename}}</div>
    </div>
    <!-- Messages Table -->
    <div class="overflow-x-auto">
        <h3 class="text-xl font-semibold text-gray-800 mb-4">Messages</h3>
        <!-- Checkbox to toggle developer messages -->
        <div class="mb-4">
            <label class="inline-flex items-center">
                <input type="checkbox" id="toggleDeveloperMessages" class="form-checkbox h-5 w-5 text-blue-600">
                <span class="ml-2 text-gray-800">Display software developer messages (experts only)?</span>
            </label>
        </div>
        <table class="table-auto w-full border-collapse border border-gray-300 text-sm">
            <thead class="bg-gray-100">
                <tr>
                    <th class="border border-gray-300 px-4 py-2 text-left">Message Type</th>
                    <th class="border border-gray-300 px-4 py-2 text-left">Severity</th>
                    <th class="border border-gray-300 px-4 py-2 text-left">Message</th>
                    <th class="border border-gray-300 px-4 py-2 text-left">Excel Reference</th>
                </tr>
            </thead>
            <tbody>
                {% set messages = conversion_result.userMessages if not dev else conversion_result.developerMessages %}
                {% for message in messages %}
                    <tr class="hover:bg-gray-50">
                        <td class="border border-gray-300 px-4 py-2">{{ message.messageType.value }}</td>
                        <td class="border border-gray-300 px-4 py-2 text-center">
                            <span class="px-2 py-1 rounded text-white {% if message.severity is sameas Severity.INFO %}bg-blue-500{% elif message.severity is sameas Severity.WARNING %}bg-amber-500{% elif message.severity is sameas Severity.ERROR %}bg-red-500{% endif %}">
                                {{ message.severity.value }}
                            </span>
                        </td>
                        <td class="border border-gray-300 px-4 py-2">{{ message.messageText }}</td>
                        {% if message.excelReference is not none %}
                        <td class="border border-gray-300 px-4 py-2">{{ message.excelReference }}</td>
                        {% else %}
                        <td class="border border-gray-300 px-4 py-2"></td>
                        {% endif %}
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    {% if conversion_result.conversionSuccessful %}
    <!-- Feedback / Request Message Card -->
    <div class="mt-6 flex items-start gap-3 p-4 bg-blue-50 border border-blue-300 rounded-lg shadow-sm">
        <!-- Icon -->
        <div class="text-blue-400 text-2xl leading-none">
            &#8505;
        </div>

        <!-- Text -->
        <p class="text-sm text-blue-800">
            The EFRAG Secretariat is interested in your experience using this tool and in real VSME disclosures for internal analytical purposes
            (any reports received by EFRAG will not be shared or published). Please feel free to send your VSME report to
            <a href="mailto:vsme@efrag.org" class="underline font-medium hover:text-blue-600">vsme@efrag.org</a> – Thank you!
        </p>
    </div>
    {% endif %}
</div>

<script>
document.addEventListener("DOMContentLoaded", function() {
    let url = new URL(window.location.href);
    let checkbox = document.getElementById("toggleDeveloperMessages");
    checkbox.checked = url.searchParams.get("show_developer_messages") === "true";
});

document.getElementById("toggleDeveloperMessages").addEventListener("change", function() {
    let url = new URL(window.location.href);
    if (this.checked) {
        url.searchParams.set("show_developer_messages", "true");
    } else {
        url.searchParams.delete("show_developer_messages");
    }
    window.location.href = url.toString();
});
</script>
    {% endif %}

{% endblock %}